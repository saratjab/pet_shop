openapi: 3.0.0
info:
  title: User Auth API
  version: 1.0.0
  description: API endpoints for user registration and login

servers:
  - url: http://localhost:3000

paths:
  /api/users/register:
    post:
      summary: Register a new customer
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCustomer'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Validation error
          content:
            application/json:
              example:
                error: 'Passwords do not match'

  /api/users/login:
    post:
      summary: Login a user and receive tokens
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid credentials or validation errors
          content:
            application/json:
              example:
                error: 'Invalid username or password'

components:
  schemas:
    RegisterCustomer:
      type: object
      required:
        - username
        - password
        - confirmPassword
        - email
      properties:
        username:
          type: string
          example: sarat123
        password:
          type: string
          minLength: 8
          maxLength: 32
          format: password
          example: strongpassword
        confirmPassword:
          type: string
          minLength: 8
          maxLength: 32
          format: password
          example: strongpassword
        email:
          type: string
          format: email
          example: sarat@example.com
        role:
          type: string
          enum: [customer]
          example: customer
        address:
          type: string
          example: 'Hebron, Palestine'
        isActive:
          type: boolean
          example: true

    LoginInput:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: sarat123
        password:
          type: string
          format: password
          example: strongpassword

    UserResponse:
      type: object
      properties:
        username:
          type: string
          example: sarat123
        role:
          type: string
          example: customer
        email:
          type: string
          example: sarat@example.com
        address:
          type: string
          example: 'Hebron, Palestine'

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          $ref: '#/components/schemas/UserResponse'
